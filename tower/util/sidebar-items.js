initSidebarItems({"enum":[["Either","Combine two different service types into a single type."]],"struct":[["BoxService","A boxed `Service + Send` trait object."],["CallAll","This is a `futures::Stream` of responses resulting from calling the wrapped `tower::Service` for each request received on the wrapped `Stream`."],["CallAllUnordered","A stream of responses received from the inner service in received order."],["Oneshot","A `Future` consuming a `Service` and request, waiting until the `Service` is ready, and then calling `Service::call` with the request, and waiting for that `Future`."],["Optional","Optionally forwards requests to an inner service."],["Ready","Future yielding a `Service` once the service is ready to process a request"],["UnsyncBoxService","A boxed `Service` trait object."]],"trait":[["ServiceExt","An extension trait for `Service`s that provides a variety of convenient adapters"]]});