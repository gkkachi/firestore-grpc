// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.ondemandscanning.v1;

import "cloud/containers/workflow/vulnerability/proto/package.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/timestamp.proto";
import "grafeas/v1/grafeas.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/ondemandscanning/v1;ondemandscanning";
option java_multiple_files = true;
option java_outer_classname = "ScannerServiceProto";
option java_package = "com.google.cloud.ondemandscanning.v1";
option csharp_namespace = "Google.Cloud.OnDemandScanning.V1";
option php_namespace = "Google\\Cloud\\OnDemandScanning\\V1";
option ruby_package = "Google::Cloud::OnDemandScanning::V1";

// The Scanner service of the On-Demand Scanning API.
//
// This service provides a way to find vulnerabilities for the packages in some
// container image. A user provides a a list of packages to `AnalyzePackages`
// and receives a list of vulnerabilities in return. The `AnalyzePackages`
// method is asynchronous, implementing Long-running Operations to track
// progress.
service ScannerService {
  option (google.api.default_host) = "ondemandscanning.googleapis.com";
  option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

  // Initiates an analysis of the provided packages.
  rpc AnalyzePackages(AnalyzePackagesRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/*}/scans:analyzePackages"
      body: "*"
    };
    option (google.api.method_signature) = "parent";
    option (google.longrunning.operation_info) = {
      response_type: "AnalyzePackagesResponse"
      metadata_type: "AnalyzePackagesMetadata"
    };
  }

  // Lists vulnerabilities resulting from a successfully completed scan.
  rpc ListVulnerabilities(ListVulnerabilitiesRequest) returns (ListVulnerabilitiesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*/scans/*}/vulnerabilities"
    };
    option (google.api.method_signature) = "parent";
  }
}

// AnalyzePackagesRequest is the request to analyze a list of packages and
// create Vulnerability Occurrences for it.
message AnalyzePackagesRequest {
  // Required. The parent of the resource for which analysis is requested. Format:
  //   projects/[project_name]/locations/[location]
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The resource URI of the container image being scanned.
  string resource_uri = 2 [(google.api.field_behavior) = REQUIRED];

  // The packages to analyze.
  repeated cloud_containers.workflow.analysis.vulnerability.proto.PackageData packages = 3;
}

// AnalyzePackagesResponse contains the information necessary to find results
// for the given scan.
message AnalyzePackagesResponse {
  // The name of the scan resource created by this successful scan.
  string scan = 1;
}

// AnalyzePackagesMetadata contains metadata for an active scan of a container
// image.
message AnalyzePackagesMetadata {
  // The resource URI of the container image being scanned.
  string resource_uri = 1;

  // When the scan was created.
  google.protobuf.Timestamp create_time = 2;
}

// ListVulnerabilitiesRequest is the request to retrieve the vulnerabilities
// resulting from a scan.
message ListVulnerabilitiesRequest {
  // Required. The parent of the collection of Vulnerabilities being requested. Format:
  //   projects/[project_name]/locations/[location]/scans/[scan_id]
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // The number of vulnerabilities to retrieve.
  int32 page_size = 2;

  // The page token, resulting from a previous call to ListVulnerabilities.
  string page_token = 3;
}

// ListVulnerabilitiesResponse contains a single page of vulnerabilities
// resulting from a scan.
message ListVulnerabilitiesResponse {
  // The list of Vulnerability Occurrences resulting from a scan.
  repeated grafeas.v1.Occurrence occurrences = 1;

  // A page token that can be used in a subsequent call to ListVulnerabilities
  // to continue retrieving results.
  string next_page_token = 2;
}
