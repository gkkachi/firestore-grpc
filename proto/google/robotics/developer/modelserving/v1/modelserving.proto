// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.robotics.developer.modelserving.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/robotics/developer/modelserving/v1/types.proto";

option go_package = "google.golang.org/genproto/googleapis/robotics/developer/modelserving/v1;modelserving";
option java_multiple_files = true;
option java_outer_classname = "ModelServingProto";
option java_package = "com.google.robotics.developer.modelserving.v1";

// ModelServing provides the API for the go/robotics-developer-api.
service ModelServing {
  option (google.api.default_host) = "roboticsdeveloper.googleapis.com";

  // DoPing provides a simple RPC useful for testing.
  rpc DoPing(DoPingRequest) returns (DoPingResponse) {
    option (google.api.http) = {
      get: "/v1/modelServing:doPing"
    };
  }

  // GeneratePlan generates a sequence of steps to execute an objective.
  // Example: "pick up an apple".
  rpc GeneratePlan(GeneratePlanRequest) returns (GeneratePlanResponse) {
    option (google.api.http) = {
      post: "/v1/modelServing:generatePlan"
      body: "*"
    };
    option (google.api.method_signature) = "prompt";
  }
}

// Request for DoPing method.
message DoPingRequest {}

// Response for DoPing method.
message DoPingResponse {}

// Request for GeneratePlan method.
message GeneratePlanRequest {
  // Required. The structured textual input given to the model as a prompt.
  // Given a prompt, the model will return a sequence of predicted steps.
  Prompt prompt = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response for GeneratePlan method.
message GeneratePlanResponse {
  // Generated plan.
  Plan plan = 1;
}
