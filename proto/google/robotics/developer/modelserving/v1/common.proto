// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.robotics.developer.modelserving.v1;

option go_package = "google.golang.org/genproto/googleapis/robotics/developer/modelserving/v1;modelserving";
option java_multiple_files = true;
option java_outer_classname = "CommonProto";
option java_package = "com.google.robotics.developer.modelserving.v1";

// Tensor message for arbitrary input.
message Tensor {
  // Tensors in float flattend to 1d. Reshaping information can be infered from
  // model attributes or other extra inputs.
  repeated float values = 1;
}

// Extra inputs to parameterize the inference.
message ExtraInputs {
  // items[input_key] specifies value set for an input_key.
  //
  // E.g., the following extra inputs will change input.tempeature to 0.1 in
  // sampling decode.
  // items {
  //   "temperature" : "0.1"
  // }
  map<string, float> items = 1;

  // tensors[input_key] specifies tensors set for an input_key.
  //
  // E.g., the following extra inputs will change input.tensors as soft prompt.
  // tensors {
  //   "prompt_embeddings" : [0.1, 0.2, 0.3, 0.4]
  // }
  // It is invalid for the same key to appear in both items and tensors.
  map<string, Tensor> tensors = 2;

  // strings[input_key] specifies value in string type set for an input_key.
  // E.g., the following extra inputs will change input.strings as decoding
  // constraint.
  // strings {
  //   "regex" : "a*b*c*d*e*f*g*h*"
  // }
  // It is invalid if the same key has appeared in items and tensors.
  map<string, string> strings = 3;
}
