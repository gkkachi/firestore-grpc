initSidebarItems({"enum":[["NullValue","`NullValue` is a singleton enumeration to represent the null value for the `Value` type union."],["Syntax","The syntax in which a protocol buffer element is defined."]],"mod":[["compiler",""],["descriptor_proto",""],["enum_descriptor_proto",""],["field",""],["field_descriptor_proto",""],["field_options",""],["file_options",""],["generated_code_info",""],["method_options",""],["source_code_info",""],["uninterpreted_option",""],["value",""]],"struct":[["Any","`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message."],["Api","Api is a light-weight descriptor for an API Interface."],["DescriptorProto","Describes a message type."],["Duration","A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years."],["Enum","Enum type definition."],["EnumDescriptorProto","Describes an enum type."],["EnumOptions",""],["EnumValue","Enum value definition."],["EnumValueDescriptorProto","Describes a value within an enum."],["EnumValueOptions",""],["ExtensionRangeOptions",""],["Field","A single field of a message type."],["FieldDescriptorProto","Describes a field within a message."],["FieldMask","`FieldMask` represents a set of symbolic field paths, for example:"],["FieldOptions",""],["FileDescriptorProto","Describes a complete .proto file."],["FileDescriptorSet","The protocol compiler can output a FileDescriptorSet containing the .proto files it parses."],["FileOptions",""],["GeneratedCodeInfo","Describes the relationship between generated code and its original source file. A GeneratedCodeInfo message is associated with only one generated source file, but may contain references to different source .proto files."],["ListValue","`ListValue` is a wrapper around a repeated field of values."],["MessageOptions",""],["Method","Method represents a method of an API interface."],["MethodDescriptorProto","Describes a method of a service."],["MethodOptions",""],["Mixin","Declares an API Interface to be included in this interface. The including interface must redeclare all the methods from the included interface, but documentation and options are inherited as follows:"],["OneofDescriptorProto","Describes a oneof."],["OneofOptions",""],["Option","A protocol buffer option, which can be attached to a message, field, enumeration, etc."],["ServiceDescriptorProto","Describes a service."],["ServiceOptions",""],["SourceCodeInfo","Encapsulates information about the original source file from which a FileDescriptorProto was generated."],["SourceContext","`SourceContext` represents information about the source of a protobuf element, like the file in which it is defined."],["Struct","`Struct` represents a structured data value, consisting of fields which map to dynamically typed values. In some languages, `Struct` might be supported by a native representation. For example, in scripting languages like JS a struct is represented as an object. The details of that representation are described together with the proto support for the language."],["Timestamp","A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one."],["Type","A protocol buffer message type."],["UninterpretedOption","A message representing a option the parser does not recognize. This only appears in options protos created by the compiler::Parser class. DescriptorPool resolves these when building Descriptor objects. Therefore, options protos in descriptor objects (e.g. returned by Descriptor::options(), or produced by Descriptor::CopyTo()) will never have UninterpretedOptions in them."],["Value","`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of that variants, absence of any variant indicates an error."]]});