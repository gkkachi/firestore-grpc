searchState.loadedDescShard("firestore_grpc", 0, "The result of a single bucket from a Firestore aggregation …\nAn array value.\nThe request for [Firestore.BatchGetDocuments][…\nThe streamed response for [Firestore.BatchGetDocuments][…\nThe request for [Firestore.BatchWrite][…\nThe response from [Firestore.BatchWrite][…\nThe request for [Firestore.BeginTransaction][…\nThe response for [Firestore.BeginTransaction][…\nA sequence of bits, encoded in a byte array.\nA bloom filter (https://en.wikipedia.org/wiki/Bloom_filter…\nThe request for [Firestore.Commit][…\nThe response for [Firestore.Commit][…\nThe request for [Firestore.CreateDocument][…\nA position in a query result set.\nThe request for [Firestore.DeleteDocument][…\nA Firestore document.\nA [Document][google.firestore.v1.Document] has changed.\nA [Document][google.firestore.v1.Document] has been …\nA set of field paths on a document. Used to restrict a get …\nA [Document][google.firestore.v1.Document] has been …\nA transformation of a document.\nExecution statistics for the query.\nA digest of all the documents that match a given target.\nExplain metrics for the query.\nExplain options for the query.\nThe request for [Firestore.GetDocument][…\nThe request for [Firestore.ListCollectionIds][…\nThe response from [Firestore.ListCollectionIds][…\nThe request for [Firestore.ListDocuments][…\nThe response for [Firestore.ListDocuments][…\nA request for [Firestore.Listen][…\nThe response for [Firestore.Listen][…\nA map value.\nThe request for [Firestore.PartitionQuery][…\nThe response for [Firestore.PartitionQuery][…\nPlanning phase information for the query.\nA precondition on a document, used for conditional …\nThe request for [Firestore.Rollback][…\nThe request for [Firestore.RunAggregationQuery][…\nThe response for [Firestore.RunAggregationQuery][…\nThe request for [Firestore.RunQuery][…\nThe response for [Firestore.RunQuery][…\nFirestore query for running an aggregation over a …\nA Firestore query.\nA specification of a set of documents to listen to.\nTargets being watched have changed.\nOptions for creating a new transaction.\nThe request for [Firestore.UpdateDocument][…\nA message that can hold any of the supported value types.\nA write on a document.\nThe request for [Firestore.Write][…\nThe response for [Firestore.Write][…\nThe result of applying a write.\nThe result of the aggregation functions, ex: …\nOptional. Series of aggregations to apply over the results …\nOptional. Whether to execute this query.\nNested message and enum types in <code>BatchGetDocumentsRequest</code>.\nNested message and enum types in <code>BatchGetDocumentsResponse</code>.\nIf the position is just before or just after the given …\nThe bytes that encode the bit sequence. May have a length …\nThe bloom filter data.\nThe error that resulted in this change, if applicable.\nOptional. The collection ID, relative to <code>parent</code>, to list.\nRequired. The collection ID, relative to <code>parent</code>, to list. …\nThe collection ids.\nThe time at which the commit occurred. Any read with an …\nThe time at which the commit occurred. Any read with an …\nThe type of precondition.\nThe consistency mode for this transaction. If not set, …\nThe consistency mode for this transaction. If not set, …\nThe consistency mode for this transaction. If not set, …\nThe consistency mode for this transaction. If not set, …\nThe consistency mode for the query, defaults to strong …\nThe consistency mode for this request. If not set, …\nThe consistency mode for this request. If not set, …\nThe continuation mode for the query. If present, it …\nThe total count of documents that match [target_id][…\nOutput only. The time at which the document was created.\nAn optional precondition on the document.\nAn optional precondition on the document. The request will …\nAn optional precondition on the document. The request will …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nDebugging statistics from the execution of the query. Note …\nThe name of the document to transform.\nThe new state of the [Document][…\nThe resource name of the [Document][…\nThe resource name of the [Document][…\nRequired. The document to create. <code>name</code> must not be set.\nRequired. The updated document. Creates the document if it …\nA query result, not set when reporting partial progress.\nThe client-assigned document ID to use for this document.\nNested message and enum types in <code>DocumentTransform</code>.\nThe Documents found.\nThe names of the documents to retrieve. In the format: …\nA potential prefix of a position in the result set to end …\nTotal time to execute the query in the backend.\nAggregated stats from the execution of the query. Only …\nThe number of documents that last matched the query at the …\nQuery explain metrics. This is only present when the …\nQuery explain metrics. This is only present when the …\nOptional. Explain options for the query. If set, …\nOptional. Explain options for the query. If set, …\nThe list of field paths in the mask. See [Document.fields][…\nThe list of transformations to apply to the fields of the …\nThe document’s fields.\nThe map’s fields.\nOptional. A potential nearest neighbors search.\nGenerated client implementations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe collections to query.\nNested message and enum types in <code>GetDocumentRequest</code>.\nThe number of hashes used by the algorithm.\nThe indexes selected for the query. For example: [ {“…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLabels associated with this write request.\nLabels associated with this target change.\nLabels associated with this batch write.\nThe maximum number of results to return.\nNested message and enum types in <code>ListCollectionIdsRequest</code>.\nNested message and enum types in <code>ListDocumentsRequest</code>.\nNested message and enum types in <code>ListenRequest</code>.\nNested message and enum types in <code>ListenResponse</code>.\nThe fields to return. If not set, returns all fields.\nOptional. The fields to return. If not set, returns all …\nThe fields to return. If not set, returns all fields.\nThe fields to return. If not set, returns all fields.\nThe fields to return. If not set, returns all fields.\nThe mode of the transaction.\nThe resource name of the document, for example …\nRequired. The resource name of the Document to get. In the …\nRequired. The resource name of the Document to delete. In …\nA token to retrieve the next page of documents.\nA page token that may be used to request an additional set …\nA page token that may be used to continue the list.\nThe number of documents to skip before returning the first …\nIf the target should be removed once it is current and …\nThe operation to execute.\nThe options for the transaction. Defaults to a read-write …\nThe order to apply to the query results.\nOptional. The optional ordering of the documents to return.\nThe number of bits of the last byte in <code>bitmap</code> to ignore as …\nOptional. The maximum number of documents to return in a …\nThe maximum number of partitions to return in this call, …\nThe maximum number of results to return.\nOptional. A page token, received from a previous …\nThe <code>next_page_token</code> value returned from a previous call to …\nA page token. Must be a value from …\nRequired. The parent resource name. In the format: …\nRequired. The parent resource. For example: …\nRequired. The parent resource name. In the format: …\nRequired. The parent resource name. In the format: …\nRequired. The parent resource name. In the format: …\nRequired. The parent document. In the format: …\nThe desired maximum number of partition points. The …\nNested message and enum types in <code>PartitionQueryRequest</code>.\nPartition results. Each partition is a split point that …\nPlanning phase information for the query.\nNested message and enum types in <code>Precondition</code>.\nThe base query to aggregate over.\nThe query to run.\nThe query to run.\nThe query to partition.\nTotal billable read operations.\nThe read timestamp at which the delete was observed.\nThe read timestamp at which the remove was observed.\nThe time at which the document was read. This may be …\nThe time at which the document was read. This may be …\nThe time at which the aggregate result was computed. This …\nThe consistent <code>read_time</code> for the given <code>target_ids</code> (omitted …\nA set of target IDs for targets that no longer match this …\nA set of target IDs for targets that previously matched …\nA set of target IDs for targets that previously matched …\nThe supported responses.\nA single result. This can be empty if the server is just …\nA single aggregation result.\nTotal number of results returned, including documents, …\nA token that can be used to resume the stream for the …\nWhen to start listening.\nNested message and enum types in <code>RunAggregationQueryRequest</code>…\nNested message and enum types in <code>RunQueryRequest</code>.\nNested message and enum types in <code>RunQueryResponse</code>.\nOptional sub-set of the fields to return.\nSets <code>target_change_type</code> to the provided enum value.\nIf the list should show missing documents.\nThe number of results that have been skipped due to an …\nA potential prefix of a position in the result set to …\nThe status of applying the writes.\nThe ID of the write stream to resume. This may only be set …\nThe ID of the stream. Only set on the first message, when …\nA stream token that was previously sent by the server.\nA token that represents the position of this response in …\nNested message and enum types in <code>StructuredAggregationQuery</code>…\nNested message and enum types in <code>StructuredQuery</code>.\nNested message and enum types in <code>Target</code>.\nNested message and enum types in <code>TargetChange</code>.\nThe supported target changes.\nReturns the enum value of <code>target_change_type</code>, or the …\nThe type of change that occurred.\nThe target ID to which this filter applies.\nThe target ID that identifies the target on the stream. …\nA set of target IDs of targets that match this document.\nThe target IDs of targets that have changed.\nThe type of target to listen to.\nThe transaction that was started as part of this request. …\nThe transaction that was started.\nIf set, applies all writes in this transaction, and …\nRequired. The transaction to roll back.\nThe transaction that was started as part of this request. …\nThe transaction that was started as part of this request.\nNested message and enum types in <code>TransactionOptions</code>.\nThe results of applying each …\nA bloom filter that, despite its name, contains the UTF-8 …\nThe fields to update in this write.\nThe fields to update. None of the field paths in the mask …\nOutput only. The time at which the document was last …\nThe last update time of the document after applying the …\nThe transforms to perform after update.\nNested message and enum types in <code>Value</code>.\nMust have a value set.\nValues in the array.\nThe values that represent a position, in the order they …\nThe filter to apply.\nNested message and enum types in <code>Write</code>.\nThe result of applying the writes.\nThe result of applying the writes.\nThe result of applying the writes.\nThe writes to apply.\nThe writes to apply.\nThe writes to apply.\nThe consistency mode for this transaction. If not set, …\nStarts a new transaction and reads the documents. Defaults …\nReads documents as they were at the given time.\nReads documents in a transaction.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA document that was requested.\nA document name that was requested but does not exist. In …\nA single result. This can be empty if the server is just …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA transformation of a field of the document.\nThe path of the field. See [Document.fields][…\nNested message and enum types in <code>FieldTransform</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe transformation to apply on the field.\nAppend the given elements in order if they are not already …\nAdds the given value to the field’s current value.\nSets the field to the maximum of its current value and the …\nSets the field to the minimum of its current value and the …\nRemove all of the given elements from the array in the …\nThe time at which the server processed the request, with …\nA value that is calculated by the server.\nSets the field to the given server value.\nThe transformation to apply on the field.\nUnspecified. This value must not be used.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ServerValue</code>, or <code>None</code> if <code>value</code> is not …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ServerValue</code>.\nThe Cloud Firestore service.\nEnable decompressing responses with <code>gzip</code>.\nGets multiple documents.\nApplies a batch of write operations.\nStarts a new transaction.\nCommits a transaction, while optionally updating documents.\nAttempt to create a new client by connecting to a given …\nCreates a new document.\nDeletes a document.\nReturns the argument unchanged.\nGets a single document.\nCalls <code>U::from(self)</code>.\nLists all the collection IDs underneath a document.\nLists documents.\nListens to changes. This method is only available via gRPC …\nPartitions a query by returning partition cursors that can …\nRolls back a transaction.\nRuns an aggregation query.\nRuns a query.\nCompress requests with <code>gzip</code>.\nUpdates or inserts a document.\nStreams batches of document updates and deletes, in order. …\nThe consistency mode for this transaction. If not set, …\nReads the version of the document at the given time.\nReads the document in a transaction.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe consistency mode for this request. If not set, …\nReads documents as they were at the given time.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe consistency mode for this transaction. If not set, …\nPerform the read at the provided time.\nPerform the read as part of an already active transaction.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA target to add to this stream.\nThe ID of a target to remove from this stream.\nThe supported target changes.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA [Document][google.firestore.v1.Document] has changed.\nA [Document][google.firestore.v1.Document] has been …\nA [Document][google.firestore.v1.Document] has been …\nA filter to apply to the set of documents previously …\nThe supported responses.\nTargets have changed.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe consistency mode for this request. If not set, …\nThe query to partition.\nReads documents as they were at the given time.\nA structured query. Query must specify collection with all …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe type of precondition.\nWhen set to <code>true</code>, the target document must exist. When set …\nWhen set, the target document must exist and have been …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe consistency mode for the query, defaults to strong …\nStarts a new transaction as part of the query, defaulting …\nThe query to run.\nExecutes the query at the given timestamp.\nAn aggregation query.\nRun the aggregation within an already active transaction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe consistency mode for this transaction. If not set, …\nStarts a new transaction and reads the documents. Defaults …\nThe query to run.\nReads documents as they were at the given time.\nA structured query.\nRun the query within an already active transaction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe continuation mode for the query. If present, it …\nIf present, Firestore has completely finished the request …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines an aggregation that produces a single result.\nThe base query to aggregate over.\nNested structured query.\nNested message and enum types in <code>Aggregation</code>.\nOptional. Optional name of the field to store the result …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe type of aggregation to perform, required.\nAverage of the values of the requested field.\nAverage aggregator.\nCount of documents that match the query.\nCount aggregator.\nThe type of aggregation to perform, required.\nSum of the values of the requested field.\nSum aggregator.\nThe field to aggregate on.\nThe field to aggregate on.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional. Optional constraint on the maximum number of …\nAscending.\nA selection of a collection, such as <code>messages as m1</code>.\nA filter that merges multiple other filters using the …\nDescending.\nA sort direction.\nA filter on a specific field.\nA reference to a field in a document, ex: <code>stats.operations</code>.\nA filter.\nNearest Neighbors search config. The ordering provided by …\nAn order on a field.\nThe projection of document’s fields to return.\nA filter with a single operand.\nUnspecified.\nWhen false, selects only collections that are immediate …\nThe collection ID. When set, selects only collections with …\nNested message and enum types in <code>CompositeFilter</code>.\nReturns the enum value of <code>direction</code>, or the default if the …\nThe direction to order by. Defaults to <code>ASCENDING</code>.\nReturns the enum value of <code>distance_measure</code>, or the default …\nRequired. The distance measure to use, required.\nOptional. Optional name of the field to output the result …\nOptional. Option to specify a threshold for which no less …\nThe field to filter by.\nThe field to order by.\nNested message and enum types in <code>FieldFilter</code>.\nA reference to a field in a document.\nThe fields to return.\nNested message and enum types in <code>Filter</code>.\nThe type of filter.\nThe list of filters to combine.\nNested message and enum types in <code>FindNearest</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Direction</code>, or <code>None</code> if <code>value</code> is not a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Direction</code>.\nRequired. The number of nearest neighbors to return. Must …\nReturns the enum value of <code>op</code>, or the default if the field …\nReturns the enum value of <code>op</code>, or the default if the field …\nReturns the enum value of <code>op</code>, or the default if the field …\nThe operator for combining multiple filters.\nThe operator to filter by.\nThe unary operator to apply.\nThe argument to the filter.\nRequired. The query vector that we are searching on. Must …\nSets <code>direction</code> to the provided enum value.\nSets <code>distance_measure</code> to the provided enum value.\nSets <code>op</code> to the provided enum value.\nSets <code>op</code> to the provided enum value.\nSets <code>op</code> to the provided enum value.\nNested message and enum types in <code>UnaryFilter</code>.\nThe value to compare to.\nRequired. An indexed vector field to search upon. Only …\nDocuments are required to satisfy all of the combined …\nA composite filter operator.\nDocuments are required to satisfy at least one of the …\nUnspecified. This value must not be used.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Operator</code>, or <code>None</code> if <code>value</code> is not a …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Operator</code>.\nThe given <code>field</code> is an array that contains the given <code>value</code>.\nThe given <code>field</code> is an array that contains any of the …\nThe given <code>field</code> is equal to the given <code>value</code>.\nThe given <code>field</code> is greater than the given <code>value</code>.\nThe given <code>field</code> is greater than or equal to the given <code>value</code>…\nThe given <code>field</code> is equal to at least one value in the …\nThe given <code>field</code> is less than the given <code>value</code>.\nThe given <code>field</code> is less than or equal to the given <code>value</code>.\nThe given <code>field</code> is not equal to the given <code>value</code>.\nThe value of the <code>field</code> is not in the given array.\nA field filter operator.\nUnspecified. This value must not be used.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Operator</code>, or <code>None</code> if <code>value</code> is not a …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Operator</code>.\nA composite filter.\nA filter on a document field.\nThe type of filter.\nA filter that takes exactly one argument.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCOSINE distance compares vectors based on the angle …\nThe distance measure to use when comparing vectors.\nSimilar to cosine but is affected by the magnitude of the …\nMeasures the EUCLIDEAN distance between the vectors. See …\nShould not be set.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>DistanceMeasure</code>, or <code>None</code> if <code>value</code> is …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>DistanceMeasure</code>.\nThe field to which to apply the operator.\nThe given <code>field</code> is equal to <code>NaN</code>.\nThe given <code>field</code> is not equal to <code>NaN</code>.\nThe given <code>field</code> is not equal to <code>NULL</code>.\nThe given <code>field</code> is equal to <code>NULL</code>.\nThe argument to the filter.\nA unary operator.\nUnspecified. This value must not be used.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Operator</code>, or <code>None</code> if <code>value</code> is not a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Operator</code>.\nA target specified by a set of document names.\nA target specified by a set of documents names.\nA target specified by a query.\nA target specified by a query.\nStart listening after a specific <code>read_time</code>.\nA resume token from a prior [TargetChange][…\nWhen to start listening.\nThe type of target to listen to.\nThe names of the documents to retrieve. In the format: …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe parent resource name. In the format: …\nNested message and enum types in <code>QueryTarget</code>.\nThe query to run.\nThe query to run.\nA structured query.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe targets have been added.\nThe targets reflect all changes committed before the …\nNo change has occurred. Used only to send an updated …\nThe targets have been removed.\nThe targets have been reset, and a new initial state for …\nThe type of change.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>TargetChangeType</code>, or <code>None</code> if <code>value</code> is …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>TargetChangeType</code>.\nThe mode of the transaction.\nOptions for a transaction that can only be used to read …\nThe transaction can only be used for read operations.\nOptions for a transaction that can be used to read and …\nThe transaction can be used for both read and write …\nThe consistency mode for this transaction. If not set, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>ReadOnly</code>.\nAn optional transaction to retry.\nThe consistency mode for this transaction. If not set, …\nReads documents at the given time.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn array value.\nA boolean value.\nA bytes value.\nA double value.\nA geo point value representing a point on the surface of …\nAn integer value.\nA map value.\nA null value.\nA reference to a document. For example: …\nA string value.\nA timestamp value.\nMust have a value set.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA document name to delete. In the format: …\nThe operation to execute.\nApplies a transformation to a document.\nA document to write.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn array value.\nThe request for [Firestore.BatchGetDocuments][…\nThe streamed response for [Firestore.BatchGetDocuments][…\nThe request for [Firestore.BatchWrite][…\nThe response from [Firestore.BatchWrite][…\nThe request for [Firestore.BeginTransaction][…\nThe response for [Firestore.BeginTransaction][…\nThe request for [Firestore.Commit][…\nThe response for [Firestore.Commit][…\nThe request for [Firestore.CreateDocument][…\nA position in a query result set.\nThe request for [Firestore.DeleteDocument][…\nA Firestore document.\nA [Document][google.firestore.v1beta1.Document] has …\nA [Document][google.firestore.v1beta1.Document] has been …\nA set of field paths on a document. Used to restrict a get …\nA [Document][google.firestore.v1beta1.Document] has been …\nA transformation of a document.\nA digest of all the documents that match a given target.\nThe request for [Firestore.GetDocument][…\nThe request for [Firestore.ListCollectionIds][…\nThe response from [Firestore.ListCollectionIds][…\nThe request for [Firestore.ListDocuments][…\nThe response for [Firestore.ListDocuments][…\nA request for [Firestore.Listen][…\nThe response for [Firestore.Listen][…\nA map value.\nThe request for [Firestore.PartitionQuery][…\nThe response for [Firestore.PartitionQuery][…\nA precondition on a document, used for conditional …\nThe request for [Firestore.Rollback][…\nThe request for [Firestore.RunQuery][…\nThe response for [Firestore.RunQuery][…\nA Firestore query.\nA specification of a set of documents to listen to.\nTargets being watched have changed.\nOptions for creating a new transaction.\nThe request for [Firestore.UpdateDocument][…\nA message that can hold any of the supported value types.\nA write on a document.\nThe request for [Firestore.Write][…\nThe response for [Firestore.Write][…\nThe result of applying a write.\nNested message and enum types in <code>BatchGetDocumentsRequest</code>.\nNested message and enum types in <code>BatchGetDocumentsResponse</code>.\nIf the position is just before or just after the given …\nThe error that resulted in this change, if applicable.\nRequired. The collection ID, relative to <code>parent</code>, to list. …\nRequired. The collection ID, relative to <code>parent</code>, to list. …\nThe collection ids.\nThe time at which the commit occurred. Any read with an …\nThe time at which the commit occurred. Any read with an …\nThe type of precondition.\nThe consistency mode for this transaction. If not set, …\nThe consistency mode for this transaction. If not set, …\nThe consistency mode for this transaction. If not set, …\nThe consistency mode for this transaction. If not set, …\nThe total count of documents that match [target_id][…\nOutput only. The time at which the document was created.\nAn optional precondition on the document.\nAn optional precondition on the document. The request will …\nAn optional precondition on the document. The request will …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nRequired. The database name. In the format: …\nThe name of the document to transform.\nThe new state of the [Document][…\nThe resource name of the [Document][…\nThe resource name of the [Document][…\nRequired. The document to create. <code>name</code> must not be set.\nRequired. The updated document. Creates the document if it …\nA query result. Not set when reporting partial progress.\nThe client-assigned document ID to use for this document.\nNested message and enum types in <code>DocumentTransform</code>.\nThe Documents found.\nThe names of the documents to retrieve. In the format: …\nA end point for the query results.\nThe list of field paths in the mask. See [Document.fields][…\nThe list of transformations to apply to the fields of the …\nThe document’s fields.\nThe map’s fields.\nGenerated client implementations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe collections to query.\nNested message and enum types in <code>GetDocumentRequest</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLabels associated with this write request.\nLabels associated with this target change.\nLabels associated with this batch write.\nThe maximum number of results to return.\nNested message and enum types in <code>ListDocumentsRequest</code>.\nNested message and enum types in <code>ListenRequest</code>.\nNested message and enum types in <code>ListenResponse</code>.\nThe fields to return. If not set, returns all fields.\nThe fields to return. If not set, returns all fields.\nThe fields to return. If not set, returns all fields.\nThe fields to return. If not set, returns all fields.\nThe fields to return. If not set, returns all fields.\nThe mode of the transaction.\nThe resource name of the document, for example …\nRequired. The resource name of the Document to get. In the …\nRequired. The resource name of the Document to delete. In …\nThe next page token.\nA page token that may be used to request an additional set …\nA page token that may be used to continue the list.\nThe number of results to skip.\nIf the target should be removed once it is current and …\nThe operation to execute.\nThe options for the transaction. Defaults to a read-write …\nThe order to apply to the query results.\nThe order to sort results by. For example: …\nThe maximum number of documents to return.\nThe maximum number of partitions to return in this call, …\nThe maximum number of results to return.\nThe <code>next_page_token</code> value returned from a previous List …\nThe <code>next_page_token</code> value returned from a previous call to …\nA page token. Must be a value from …\nRequired. The parent resource name. In the format: …\nRequired. The parent resource. For example: …\nRequired. The parent resource name. In the format: …\nRequired. The parent resource name. In the format: …\nRequired. The parent document. In the format: …\nThe desired maximum number of partition points. The …\nNested message and enum types in <code>PartitionQueryRequest</code>.\nPartition results. Each partition is a split point that …\nNested message and enum types in <code>Precondition</code>.\nThe query to run.\nThe query to partition.\nThe read timestamp at which the delete was observed.\nThe read timestamp at which the remove was observed.\nThe time at which the document was read. This may be …\nThe time at which the document was read. This may be …\nThe consistent <code>read_time</code> for the given <code>target_ids</code> (omitted …\nA set of target IDs for targets that no longer match this …\nA set of target IDs for targets that previously matched …\nA set of target IDs for targets that previously matched …\nThe supported responses.\nA single result. This can be empty if the server is just …\nA token that can be used to resume the stream for the …\nWhen to start listening.\nNested message and enum types in <code>RunQueryRequest</code>.\nThe projection to return.\nSets <code>target_change_type</code> to the provided enum value.\nIf the list should show missing documents. A missing …\nThe number of results that have been skipped due to an …\nA starting point for the query results.\nThe status of applying the writes.\nThe ID of the write stream to resume. This may only be set …\nThe ID of the stream. Only set on the first message, when …\nA stream token that was previously sent by the server.\nA token that represents the position of this response in …\nNested message and enum types in <code>StructuredQuery</code>.\nNested message and enum types in <code>Target</code>.\nNested message and enum types in <code>TargetChange</code>.\nThe supported target changes.\nReturns the enum value of <code>target_change_type</code>, or the …\nThe type of change that occurred.\nThe target ID to which this filter applies.\nThe target ID that identifies the target on the stream. …\nA set of target IDs of targets that match this document.\nThe target IDs of targets that have changed.\nThe type of target to listen to.\nThe transaction that was started as part of this request. …\nThe transaction that was started.\nIf set, applies all writes in this transaction, and …\nRequired. The transaction to roll back.\nThe transaction that was started as part of this request. …\nNested message and enum types in <code>TransactionOptions</code>.\nThe results of applying each …\nThe fields to update in this write.\nThe fields to update. None of the field paths in the mask …\nOutput only. The time at which the document was last …\nThe last update time of the document after applying the …\nThe transforms to perform after update.\nNested message and enum types in <code>Value</code>.\nMust have a value set.\nValues in the array.\nThe values that represent a position, in the order they …\nThe filter to apply.\nNested message and enum types in <code>Write</code>.\nThe result of applying the writes.\nThe result of applying the writes.\nThe result of applying the writes.\nThe writes to apply.\nThe writes to apply.\nThe writes to apply.\nThe consistency mode for this transaction. If not set, …\nStarts a new transaction and reads the documents. Defaults …\nReads documents as they were at the given time. This may …\nReads documents in a transaction.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA document that was requested.\nA document name that was requested but does not exist. In …\nA single result. This can be empty if the server is just …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA transformation of a field of the document.\nThe path of the field. See [Document.fields][…\nNested message and enum types in <code>FieldTransform</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe transformation to apply on the field.\nAppend the given elements in order if they are not already …\nAdds the given value to the field’s current value.\nSets the field to the maximum of its current value and the …\nSets the field to the minimum of its current value and the …\nRemove all of the given elements from the array in the …\nThe time at which the server processed the request, with …\nA value that is calculated by the server.\nSets the field to the given server value.\nThe transformation to apply on the field.\nUnspecified. This value must not be used.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ServerValue</code>, or <code>None</code> if <code>value</code> is not …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ServerValue</code>.\nThe Cloud Firestore service.\nEnable decompressing responses with <code>gzip</code>.\nGets multiple documents.\nApplies a batch of write operations.\nStarts a new transaction.\nCommits a transaction, while optionally updating documents.\nAttempt to create a new client by connecting to a given …\nCreates a new document.\nDeletes a document.\nReturns the argument unchanged.\nGets a single document.\nCalls <code>U::from(self)</code>.\nLists all the collection IDs underneath a document.\nLists documents.\nListens to changes.\nPartitions a query by returning partition cursors that can …\nRolls back a transaction.\nRuns a query.\nCompress requests with <code>gzip</code>.\nUpdates or inserts a document.\nStreams batches of document updates and deletes, in order.\nThe consistency mode for this transaction. If not set, …\nReads the version of the document at the given time. This …\nReads the document in a transaction.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe consistency mode for this transaction. If not set, …\nReads documents as they were at the given time. This may …\nReads documents in a transaction.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA target to add to this stream.\nThe ID of a target to remove from this stream.\nThe supported target changes.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA [Document][google.firestore.v1beta1.Document] has …\nA [Document][google.firestore.v1beta1.Document] has been …\nA [Document][google.firestore.v1beta1.Document] has been …\nA filter to apply to the set of documents previously …\nThe supported responses.\nTargets have changed.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe query to partition.\nA structured query. Query must specify collection with all …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe type of precondition.\nWhen set to <code>true</code>, the target document must exist. When set …\nWhen set, the target document must exist and have been …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe consistency mode for this transaction. If not set, …\nStarts a new transaction and reads the documents. Defaults …\nThe query to run.\nReads documents as they were at the given time. This may …\nA structured query.\nReads documents in a transaction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAscending.\nA selection of a collection, such as <code>messages as m1</code>.\nA filter that merges multiple other filters using the …\nDescending.\nA sort direction.\nA filter on a specific field.\nA reference to a field, such as …\nA filter.\nAn order on a field.\nThe projection of document’s fields to return.\nA filter with a single operand.\nUnspecified.\nWhen false, selects only collections that are immediate …\nThe collection ID. When set, selects only collections with …\nNested message and enum types in <code>CompositeFilter</code>.\nReturns the enum value of <code>direction</code>, or the default if the …\nThe direction to order by. Defaults to <code>ASCENDING</code>.\nThe field to filter by.\nThe field to order by.\nNested message and enum types in <code>FieldFilter</code>.\nThe fields to return.\nNested message and enum types in <code>Filter</code>.\nThe type of filter.\nThe list of filters to combine. Must contain at least one …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Direction</code>, or <code>None</code> if <code>value</code> is not a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Direction</code>.\nReturns the enum value of <code>op</code>, or the default if the field …\nReturns the enum value of <code>op</code>, or the default if the field …\nReturns the enum value of <code>op</code>, or the default if the field …\nThe operator for combining multiple filters.\nThe operator to filter by.\nThe unary operator to apply.\nThe argument to the filter.\nSets <code>direction</code> to the provided enum value.\nSets <code>op</code> to the provided enum value.\nSets <code>op</code> to the provided enum value.\nSets <code>op</code> to the provided enum value.\nNested message and enum types in <code>UnaryFilter</code>.\nThe value to compare to.\nThe results are required to satisfy each of the combined …\nA composite filter operator.\nUnspecified. This value must not be used.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Operator</code>, or <code>None</code> if <code>value</code> is not a …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Operator</code>.\nThe given <code>field</code> is an array that contains the given <code>value</code>.\nThe given <code>field</code> is an array that contains any of the …\nThe given <code>field</code> is equal to the given <code>value</code>.\nThe given <code>field</code> is greater than the given <code>value</code>.\nThe given <code>field</code> is greater than or equal to the given <code>value</code>…\nThe given <code>field</code> is equal to at least one value in the …\nThe given <code>field</code> is less than the given <code>value</code>.\nThe given <code>field</code> is less than or equal to the given <code>value</code>.\nThe given <code>field</code> is not equal to the given <code>value</code>.\nThe value of the <code>field</code> is not in the given array.\nA field filter operator.\nUnspecified. This value must not be used.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Operator</code>, or <code>None</code> if <code>value</code> is not a …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Operator</code>.\nA composite filter.\nA filter on a document field.\nThe type of filter.\nA filter that takes exactly one argument.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe field to which to apply the operator.\nThe given <code>field</code> is equal to <code>NaN</code>.\nThe given <code>field</code> is not equal to <code>NaN</code>.\nThe given <code>field</code> is not equal to <code>NULL</code>.\nThe given <code>field</code> is equal to <code>NULL</code>.\nThe argument to the filter.\nA unary operator.\nUnspecified. This value must not be used.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Operator</code>, or <code>None</code> if <code>value</code> is not a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Operator</code>.\nA target specified by a set of document names.\nA target specified by a set of documents names.\nA target specified by a query.\nA target specified by a query.\nStart listening after a specific <code>read_time</code>.\nA resume token from a prior [TargetChange][…\nWhen to start listening.\nThe type of target to listen to.\nThe names of the documents to retrieve. In the format: …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe parent resource name. In the format: …\nNested message and enum types in <code>QueryTarget</code>.\nThe query to run.\nThe query to run.\nA structured query.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe targets have been added.\nThe targets reflect all changes committed before the …\nNo change has occurred. Used only to send an updated …\nThe targets have been removed.\nThe targets have been reset, and a new initial state for …\nThe type of change.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>TargetChangeType</code>, or <code>None</code> if <code>value</code> is …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>TargetChangeType</code>.\nThe mode of the transaction.\nOptions for a transaction that can only be used to read …\nThe transaction can only be used for read operations.\nOptions for a transaction that can be used to read and …\nThe transaction can be used for both read and write …\nThe consistency mode for this transaction. If not set, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>ReadOnly</code>.\nAn optional transaction to retry.\nThe consistency mode for this transaction. If not set, …\nReads documents at the given time. This may not be older …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn array value.\nA boolean value.\nA bytes value.\nA double value.\nA geo point value representing a point on the surface of …\nAn integer value.\nA map value.\nA null value.\nA reference to a document. For example: …\nA string value.\nA timestamp value.\nMust have a value set.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA document name to delete. In the format: …\nThe operation to execute.\nApplies a transformation to a document.\nA document to write.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>Status</code> type defines a logical error model that is …\nThe status code, which should be an enum value of …\nA list of messages that carry the error details.  There is …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA developer-facing error message, which should be in …\nAn object that represents a latitude/longitude pair. This …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe latitude in degrees. It must be in the range [-90.0, …\nThe longitude in degrees. It must be in the range [-180.0, …")